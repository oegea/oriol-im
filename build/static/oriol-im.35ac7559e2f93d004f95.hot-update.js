webpackHotUpdate("oriol-im",{

/***/ "./packages/mars-theme/src/components/index.js":
/*!*****************************************************!*\
  !*** ./packages/mars-theme/src/components/index.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./header */ \"./packages/mars-theme/src/components/header.js\");\n/* harmony import */ var _footer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./footer */ \"./packages/mars-theme/src/components/footer.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./list */ \"./packages/mars-theme/src/components/list/index.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./post */ \"./packages/mars-theme/src/components/post.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./loading */ \"./packages/mars-theme/src/components/loading.js\");\n/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./title */ \"./packages/mars-theme/src/components/title.js\");\n/* harmony import */ var _page_error__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./page-error */ \"./packages/mars-theme/src/components/page-error.js\");\n/* harmony import */ var _about__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./about */ \"./packages/mars-theme/src/components/about.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}//Custom pages\n/**\n * Theme is the root React component of our theme. The one we will export\n * in roots.\n */var Theme=(_ref)=>{var{state}=_ref;// Get information about the current URL.\nvar data=state.source.get(state.router.link);return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_title__WEBPACK_IMPORTED_MODULE_10__[\"default\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_3__[\"Head\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"meta\",{name:\"description\",content:state.frontity.description}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"html\",{lang:\"es\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"script\",{src:\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.20.0/components/prism-core.js\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"script\",{src:\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.20.0/plugins/autoloader/prism-autoloader.js\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"script\",null,\"Prism.plugins.autoloader.languages_path = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.20.0/components/'\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"link\",{rel:\"stylesheet\",type:\"text/css\",href:\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.20.0/themes/prism-coy.min.css\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"link\",{rel:\"stylesheet\",type:\"text/css\",href:\"https://rsms.me/raster/raster.grid.css?v=20\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"Global\"],{styles:globalStyles}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(HeadContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_header__WEBPACK_IMPORTED_MODULE_5__[\"default\"],null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(Main,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_4__[\"default\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_loading__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{when:data.isFetching}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{when:data.isArchive}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{when:data.isPostType}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_about__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{when:data.isAbout}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_page_error__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{when:data.isError}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(FooterContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_footer__WEBPACK_IMPORTED_MODULE_6__[\"default\"],null)));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(Theme));var globalStyles= false?undefined:{name:\"jvljpj-globalStyles\",styles:\"body{padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Droid Sans\\\",\\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;}a,a:visited{color:inherit;text-decoration:none;}h1{font-size:2.2em;}h2{font-size:2em;}p,li{font-size:17px;}p{text-align:justify;}pre[class*=language-]>code{border-left:10px solid #fccb0b;box-shadow:-1px 0 0 0 #fccb0b,0 0 0 1px #dfdfdf;}.md-chip{display:inline-block;background:#e0e0e0;padding:0 12px;border-radius:32px;font-size:13px;}.md-chip.md-chip-hover:hover{background:#ccc;}.md-chip-clickable{cursor:pointer;}.md-chip,.md-chip-icon{height:32px;line-height:32px;}.md-chip-icon{display:block;float:left;background:#e4bb1c;width:32px;border-radius:50%;text-align:center;color:white;margin:0 8px 0 -12px;}.md-chip-remove{display:inline-block;background:#aaa;border:0;height:20px;width:20px;border-radius:50%;padding:0;margin:0 -4px 0 4px;cursor:pointer;font:inherit;line-height:20px;}.md-chip-remove:after{color:#e0e0e0;content:\\\"x\\\";}.md-chip-remove:hover{background:#999;}.md-chip-remove:active{background:#777;}.md-chips{padding:12px 0;}.md-chips .md-chip{margin:0 5px 3px 0;}.md-chip-raised{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 1px 5px 0 rgba(0,0,0,0.12),0 3px 1px -2px rgba(0,0,0,0.2);}@keyframes slideshow{0%{left:0px;}100%{left:-600px;}}.wp-block-columns{display:flex;margin-bottom:28px;flex-wrap:wrap;}@media (min-width:782px){.wp-block-columns{flex-wrap:nowrap;}}.wp-block-columns.has-background{padding:20px 30px;}.wp-block-column{flex-grow:1;min-width:0;word-break:break-word;overflow-wrap:break-word;}@media (min-width:1282px){.wp-block-column{padding:25px;flex-basis:0;flex-grow:1;}.wp-block-column[style]{flex-grow:0;}.wp-block-column:not(:first-child){margin-right:32px;}}.wp-block-columns.are-vertically-aligned-top{align-items:flex-start;}.wp-block-columns.are-vertically-aligned-center{align-items:center;}.wp-block-columns.are-vertically-aligned-bottom{align-items:flex-end;}.wp-block-column.is-vertically-aligned-top{align-self:flex-start;}.wp-block-column.is-vertically-aligned-center{-ms-grid-row-align:center;align-self:center;}.wp-block-column.is-vertically-aligned-bottom{align-self:flex-end;}.wp-block-column.is-vertically-aligned-top,.wp-block-column.is-vertically-aligned-center,.wp-block-column.is-vertically-aligned-bottom{width:100%;};label:globalStyles;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxEZXZlbG9wbWVudFxcb3Jpb2wtaW1cXHBhY2thZ2VzXFxtYXJzLXRoZW1lXFxzcmNcXGNvbXBvbmVudHNcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtFd0IiLCJmaWxlIjoiQzpcXERldmVsb3BtZW50XFxvcmlvbC1pbVxccGFja2FnZXNcXG1hcnMtdGhlbWVcXHNyY1xcY29tcG9uZW50c1xcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBHbG9iYWwsIGNzcywgY29ubmVjdCwgc3R5bGVkLCBIZWFkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgU3dpdGNoIGZyb20gXCJAZnJvbnRpdHkvY29tcG9uZW50cy9zd2l0Y2hcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4vaGVhZGVyXCI7XG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xuaW1wb3J0IExpc3QgZnJvbSBcIi4vbGlzdFwiO1xuaW1wb3J0IFBvc3QgZnJvbSBcIi4vcG9zdFwiO1xuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4vbG9hZGluZ1wiO1xuaW1wb3J0IFRpdGxlIGZyb20gXCIuL3RpdGxlXCI7XG5pbXBvcnQgUGFnZUVycm9yIGZyb20gXCIuL3BhZ2UtZXJyb3JcIjtcblxuLy9DdXN0b20gcGFnZXNcbmltcG9ydCBBYm91dCBmcm9tICcuL2Fib3V0JztcblxuLyoqXG4gKiBUaGVtZSBpcyB0aGUgcm9vdCBSZWFjdCBjb21wb25lbnQgb2Ygb3VyIHRoZW1lLiBUaGUgb25lIHdlIHdpbGwgZXhwb3J0XG4gKiBpbiByb290cy5cbiAqL1xuY29uc3QgVGhlbWUgPSAoeyBzdGF0ZSB9KSA9PiB7XG4gIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7LyogQWRkIHNvbWUgbWV0YXRhZ3MgdG8gdGhlIDxoZWFkPiBvZiB0aGUgSFRNTC4gKi99XG4gICAgICA8VGl0bGUgLz5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PXtzdGF0ZS5mcm9udGl0eS5kZXNjcmlwdGlvbn0gLz5cbiAgICAgICAgPGh0bWwgbGFuZz1cImVzXCIgLz5cbiAgICAgICAgPHNjcmlwdCBzcmM9XCJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9wcmlzbS8xLjIwLjAvY29tcG9uZW50cy9wcmlzbS1jb3JlLmpzXCI+PC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvcHJpc20vMS4yMC4wL3BsdWdpbnMvYXV0b2xvYWRlci9wcmlzbS1hdXRvbG9hZGVyLmpzXCI+PC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQ+UHJpc20ucGx1Z2lucy5hdXRvbG9hZGVyLmxhbmd1YWdlc19wYXRoID0gJ2h0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL3ByaXNtLzEuMjAuMC9jb21wb25lbnRzLyc8L3NjcmlwdD5cbiAgICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9wcmlzbS8xLjIwLjAvdGhlbWVzL3ByaXNtLWNveS5taW4uY3NzXCIgLz5cbiAgICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCJodHRwczovL3JzbXMubWUvcmFzdGVyL3Jhc3Rlci5ncmlkLmNzcz92PTIwXCIgLz5cbiAgICAgIDwvSGVhZD5cblxuICAgICAgey8qIEFkZCBzb21lIGdsb2JhbCBzdHlsZXMgZm9yIHRoZSB3aG9sZSBzaXRlLCBsaWtlIGJvZHkgb3IgYSdzLiBcbiAgICAgIE5vdCBjbGFzc2VzIGhlcmUgYmVjYXVzZSB3ZSB1c2UgQ1NTLWluLUpTLiBPbmx5IGdsb2JhbCBIVE1MIHRhZ3MuICovfVxuICAgICAgPEdsb2JhbCBzdHlsZXM9e2dsb2JhbFN0eWxlc30gLz5cblxuICAgICAgey8qIEFkZCB0aGUgaGVhZGVyIG9mIHRoZSBzaXRlLiAqL31cbiAgICAgIDxIZWFkQ29udGFpbmVyPlxuICAgICAgICA8SGVhZGVyIC8+XG4gICAgICA8L0hlYWRDb250YWluZXI+XG5cbiAgICAgIHsvKiBBZGQgdGhlIG1haW4gc2VjdGlvbi4gSXQgcmVuZGVycyBhIGRpZmZlcmVudCBjb21wb25lbnQgZGVwZW5kaW5nXG4gICAgICBvbiB0aGUgdHlwZSBvZiBVUkwgd2UgYXJlIGluLiAqL31cbiAgICAgIDxNYWluPlxuICAgICAgICA8U3dpdGNoPlxuICAgICAgICAgIDxMb2FkaW5nIHdoZW49e2RhdGEuaXNGZXRjaGluZ30gLz5cbiAgICAgICAgICA8TGlzdCB3aGVuPXtkYXRhLmlzQXJjaGl2ZX0gLz5cbiAgICAgICAgICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdFR5cGV9IC8+XG4gICAgICAgICAgPEFib3V0IHdoZW49e2RhdGEuaXNBYm91dH0gLz5cbiAgICAgICAgICA8UGFnZUVycm9yIHdoZW49e2RhdGEuaXNFcnJvcn0gLz5cbiAgICAgICAgPC9Td2l0Y2g+XG4gICAgICA8L01haW4+XG5cbiAgICAgIDxGb290ZXJDb250YWluZXI+XG4gICAgICAgIDxGb290ZXIgLz5cbiAgICAgIDwvRm9vdGVyQ29udGFpbmVyPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChUaGVtZSk7XG5cbmNvbnN0IGdsb2JhbFN0eWxlcyA9IGNzc2BcbiAgYm9keSB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTZWdvZSBVSVwiLCBSb2JvdG8sXG4gICAgICBcIkRyb2lkIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICB9XG4gIGEsXG4gIGE6dmlzaXRlZCB7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG5cbiAgaDEge1xuICAgIGZvbnQtc2l6ZTogMi4yZW07XG4gIH1cblxuICBoMntcbiAgICBmb250LXNpemU6IDJlbTtcbiAgfVxuXG4gIHAsIGxpIHtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gIH1cblxuICBwIHtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICB9XG5cbiAgLyogUHJpc21KUyBzbWFsbCBjdXN0b21pemF0aW9uICovXG4gIHByZVtjbGFzcyo9bGFuZ3VhZ2UtXT5jb2RlIHtcbiAgICBib3JkZXItbGVmdDogMTBweCBzb2xpZCAjZmNjYjBiO1xuICAgIGJveC1zaGFkb3c6IC0xcHggMCAwIDAgI2ZjY2IwYiwgMCAwIDAgMXB4ICNkZmRmZGY7XG4gIH1cblxuICAvKkNoaXBzKi9cbiAgLm1kLWNoaXAge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBiYWNrZ3JvdW5kOiAjZTBlMGUwO1xuICAgIHBhZGRpbmc6IDAgMTJweDtcbiAgICBib3JkZXItcmFkaXVzOiAzMnB4O1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgfVxuICAubWQtY2hpcC5tZC1jaGlwLWhvdmVyOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjY2NjO1xuICB9XG4gIFxuICAubWQtY2hpcC1jbGlja2FibGUge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBcbiAgLm1kLWNoaXAsXG4gIC5tZC1jaGlwLWljb24ge1xuICAgIGhlaWdodDogMzJweDtcbiAgICBsaW5lLWhlaWdodDogMzJweDtcbiAgfVxuICBcbiAgLm1kLWNoaXAtaWNvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgLypiYWNrZ3JvdW5kOiAjMDA5NTg3OyovXG4gICAgYmFja2dyb3VuZDogI2U0YmIxYztcbiAgICB3aWR0aDogMzJweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBtYXJnaW46IDAgOHB4IDAgLTEycHg7XG4gIH1cbiAgXG4gIC5tZC1jaGlwLXJlbW92ZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJhY2tncm91bmQ6ICNhYWE7XG4gICAgYm9yZGVyOiAwO1xuICAgIGhlaWdodDogMjBweDtcbiAgICB3aWR0aDogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDAgLTRweCAwIDRweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZm9udDogaW5oZXJpdDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgfVxuICAubWQtY2hpcC1yZW1vdmU6YWZ0ZXIge1xuICAgIGNvbG9yOiAjZTBlMGUwO1xuICAgIGNvbnRlbnQ6IFwieFwiO1xuICB9XG4gIC5tZC1jaGlwLXJlbW92ZTpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogIzk5OTtcbiAgfVxuICAubWQtY2hpcC1yZW1vdmU6YWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kOiAjNzc3O1xuICB9XG4gIFxuICAubWQtY2hpcHMge1xuICAgIHBhZGRpbmc6IDEycHggMDtcbiAgfVxuICAubWQtY2hpcHMgLm1kLWNoaXAge1xuICAgIG1hcmdpbjogMCA1cHggM3B4IDA7XG4gIH1cbiAgXG4gIC5tZC1jaGlwLXJhaXNlZCB7XG4gICAgYm94LXNoYWRvdzogMCAycHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICB9XG5cbiAgLypUZWNobm9sb2dpZXMgYW5pbWF0aW9uKi9cbiAgQGtleWZyYW1lcyBzbGlkZXNob3cge1xuICAgIDAlICAgIHsgbGVmdDogMHB4OyB9XG4gICAgMTAwJSAgeyBsZWZ0OiAtNjAwcHg7IH1cbiAgfVxuXG4gIC8qIEd1dGVuYmVyZyBzdHlsZXMgKi9cbiAgLndwLWJsb2NrLWNvbHVtbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjhweDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzgycHgpIHtcbiAgICAgIC53cC1ibG9jay1jb2x1bW5zIHtcbiAgICAgICAgZmxleC13cmFwOiBub3dyYXA7IFxuICAgICAgfSBcbiAgICB9XG4gICAgLndwLWJsb2NrLWNvbHVtbnMuaGFzLWJhY2tncm91bmQge1xuICAgICAgcGFkZGluZzogMjBweCAzMHB4OyBcbiAgICB9XG4gICAgICBcbiAgICAud3AtYmxvY2stY29sdW1uIHtcbiAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgIG1pbi13aWR0aDogMDtcbiAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gICAgICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkOyBcbiAgICB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEyODJweCkge1xuICAgICAgLndwLWJsb2NrLWNvbHVtbiB7XG4gICAgICAgIHBhZGRpbmc6IDI1cHg7XG4gICAgICAgIGZsZXgtYmFzaXM6IDA7XG4gICAgICAgIGZsZXgtZ3JvdzogMTsgXG4gICAgICB9XG4gICAgICAud3AtYmxvY2stY29sdW1uW3N0eWxlXSB7XG4gICAgICAgIGZsZXgtZ3JvdzogMDsgXG4gICAgICB9XG4gICAgICAud3AtYmxvY2stY29sdW1uOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAzMnB4OyBcbiAgICAgIH0gXG4gICAgfVxuICAgICAgXG4gICAgLyoqXG4gICAgICogQWxsIENvbHVtbnMgQWxpZ25tZW50XG4gICAgICovXG4gICAgLndwLWJsb2NrLWNvbHVtbnMuYXJlLXZlcnRpY2FsbHktYWxpZ25lZC10b3Age1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IFxuICAgIH1cbiAgICAgIFxuICAgIC53cC1ibG9jay1jb2x1bW5zLmFyZS12ZXJ0aWNhbGx5LWFsaWduZWQtY2VudGVyIHtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IFxuICAgIH1cbiAgICAgIFxuICAgIC53cC1ibG9jay1jb2x1bW5zLmFyZS12ZXJ0aWNhbGx5LWFsaWduZWQtYm90dG9tIHtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgXG4gICAgfVxuICAgICAgXG4gICAgLyoqXG4gICAgICogSW5kaXZpZHVhbCBDb2x1bW4gQWxpZ25tZW50XG4gICAgICovXG4gICAgLndwLWJsb2NrLWNvbHVtbi5pcy12ZXJ0aWNhbGx5LWFsaWduZWQtdG9wIHtcbiAgICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7IFxuICAgIH1cbiAgICBcbiAgICAud3AtYmxvY2stY29sdW1uLmlzLXZlcnRpY2FsbHktYWxpZ25lZC1jZW50ZXIge1xuICAgICAgLW1zLWdyaWQtcm93LWFsaWduOiBjZW50ZXI7XG4gICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7IFxuICAgIH1cbiAgICBcbiAgICAud3AtYmxvY2stY29sdW1uLmlzLXZlcnRpY2FsbHktYWxpZ25lZC1ib3R0b20ge1xuICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7IFxuICAgIH1cbiAgICBcbiAgICAud3AtYmxvY2stY29sdW1uLmlzLXZlcnRpY2FsbHktYWxpZ25lZC10b3AsIC53cC1ibG9jay1jb2x1bW4uaXMtdmVydGljYWxseS1hbGlnbmVkLWNlbnRlciwgLndwLWJsb2NrLWNvbHVtbi5pcy12ZXJ0aWNhbGx5LWFsaWduZWQtYm90dG9tIHtcbiAgICAgIHdpZHRoOiAxMDAlOyBcbiAgICB9XG5gO1xuXG5jb25zdCBIZWFkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiA3MHB4O1xuICBib3JkZXItdG9wOiAwLjVlbSBzb2xpZCByZ2IoMjUyLCAyMDMsIDExKTtcbmA7XG5cbmNvbnN0IE1haW4gPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG5gO1xuXG5cbmNvbnN0IEZvb3RlckNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogNzBweDtcbmA7Il19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var HeadContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1nzqhd60\",label:\"HeadContainer\"})( false?undefined:{name:\"1pqr2dr\",styles:\"display:flex;align-items:center;flex-direction:column;height:70px;border-top:0.5em solid rgb(252,203,11);\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Main=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1nzqhd61\",label:\"Main\"})( false?undefined:{name:\"1pho85m\",styles:\"display:flex;justify-content:center;background:white;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var FooterContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1nzqhd62\",label:\"FooterContainer\"})( false?undefined:{name:\"1hnx09y\",styles:\"display:flex;align-items:center;flex-direction:column;height:70px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/index.js\n");

/***/ })

})